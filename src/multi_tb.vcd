$date
	Fri Nov 24 13:02:12 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 32 ! WriteData [31:0] $end
$var wire 1 " MemWrite $end
$var wire 32 # DataAdr [31:0] $end
$var reg 1 $ clk $end
$var reg 1 % reset $end
$scope module dut $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 & WriteData [31:0] $end
$var wire 32 ' ReadData [31:0] $end
$var wire 1 " MemWrite $end
$var wire 32 ( Adr [31:0] $end
$scope module arm $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 ) isShift $end
$var wire 32 * WriteData [31:0] $end
$var wire 2 + ResultSrc [1:0] $end
$var wire 1 , RegWrite $end
$var wire 2 - RegSrc [1:0] $end
$var wire 32 . ReadData [31:0] $end
$var wire 1 / PCWrite $end
$var wire 1 " MemWrite $end
$var wire 32 0 Instr [31:0] $end
$var wire 2 1 ImmSrc [1:0] $end
$var wire 1 2 IRWrite $end
$var wire 1 3 AdrSrc $end
$var wire 32 4 Adr [31:0] $end
$var wire 2 5 ALUSrcB [1:0] $end
$var wire 2 6 ALUSrcA [1:0] $end
$var wire 4 7 ALUFlags [3:0] $end
$var wire 3 8 ALUControl [2:0] $end
$scope module c $end
$var wire 20 9 Instr [31:12] $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 ) isShift $end
$var wire 2 : ResultSrc [1:0] $end
$var wire 1 , RegWrite $end
$var wire 1 ; RegW $end
$var wire 2 < RegSrc [1:0] $end
$var wire 1 / PCWrite $end
$var wire 1 = PCS $end
$var wire 1 > NextPC $end
$var wire 1 " MemWrite $end
$var wire 1 ? MemW $end
$var wire 2 @ ImmSrc [1:0] $end
$var wire 1 2 IRWrite $end
$var wire 2 A FlagW [1:0] $end
$var wire 1 3 AdrSrc $end
$var wire 2 B ALUSrcB [1:0] $end
$var wire 2 C ALUSrcA [1:0] $end
$var wire 4 D ALUFlags [3:0] $end
$var wire 3 E ALUControl [2:0] $end
$scope module cl $end
$var wire 4 F Cond [3:0] $end
$var wire 2 G FlagWrite [1:0] $end
$var wire 1 " MemWrite $end
$var wire 1 / PCWrite $end
$var wire 1 , RegWrite $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 ; RegW $end
$var wire 1 = PCS $end
$var wire 1 > NextPC $end
$var wire 1 ? MemW $end
$var wire 4 H Flags [3:0] $end
$var wire 2 I FlagW [1:0] $end
$var wire 1 J CondExDelayed $end
$var wire 1 K CondEx $end
$var wire 4 L ALUFlags [3:0] $end
$scope module cc $end
$var wire 4 M Cond [3:0] $end
$var wire 4 N Flags [3:0] $end
$var wire 1 O ge $end
$var wire 1 P zero $end
$var wire 1 Q overflow $end
$var wire 1 R neg $end
$var wire 1 S carry $end
$var reg 1 K CondEx $end
$upscope $end
$scope module condreg $end
$var wire 1 $ clk $end
$var wire 1 K d $end
$var wire 1 % reset $end
$var parameter 32 T WIDTH $end
$var reg 1 J q $end
$upscope $end
$scope module flagreg0 $end
$var wire 1 $ clk $end
$var wire 2 U d [1:0] $end
$var wire 1 V en $end
$var wire 1 % reset $end
$var parameter 32 W WIDTH $end
$var reg 2 X q [1:0] $end
$upscope $end
$scope module flagreg1 $end
$var wire 1 $ clk $end
$var wire 2 Y d [1:0] $end
$var wire 1 Z en $end
$var wire 1 % reset $end
$var parameter 32 [ WIDTH $end
$var reg 2 \ q [1:0] $end
$upscope $end
$upscope $end
$scope module dec $end
$var wire 6 ] Funct [5:0] $end
$var wire 2 ^ ImmSrc [1:0] $end
$var wire 2 _ Op [1:0] $end
$var wire 1 = PCS $end
$var wire 4 ` Rd [3:0] $end
$var wire 1 $ clk $end
$var wire 1 ) isShift $end
$var wire 1 % reset $end
$var wire 2 a ResultSrc [1:0] $end
$var wire 1 ; RegW $end
$var wire 1 > NextPC $end
$var wire 1 ? MemW $end
$var wire 1 2 IRWrite $end
$var wire 1 b Branch $end
$var wire 1 3 AdrSrc $end
$var wire 2 c ALUSrcB [1:0] $end
$var wire 2 d ALUSrcA [1:0] $end
$var wire 1 e ALUOp $end
$var reg 3 f ALUControl [2:0] $end
$var reg 2 g FlagW [1:0] $end
$var reg 2 h RegSrc [1:0] $end
$scope module fsm $end
$var wire 6 i Funct [5:0] $end
$var wire 2 j Op [1:0] $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 2 k ResultSrc [1:0] $end
$var wire 1 ; RegW $end
$var wire 1 > NextPC $end
$var wire 1 ? MemW $end
$var wire 1 2 IRWrite $end
$var wire 1 b Branch $end
$var wire 1 3 AdrSrc $end
$var wire 2 l ALUSrcB [1:0] $end
$var wire 2 m ALUSrcA [1:0] $end
$var wire 1 e ALUOp $end
$var parameter 4 n ALUWB $end
$var parameter 4 o BRANCH $end
$var parameter 4 p DECODE $end
$var parameter 4 q EXECUTEI $end
$var parameter 4 r EXECUTER $end
$var parameter 4 s FETCH $end
$var parameter 4 t MEMADR $end
$var parameter 4 u MEMRD $end
$var parameter 4 v MEMWB $end
$var parameter 4 w MEMWR $end
$var parameter 4 x UNKNOWN $end
$var reg 13 y controls [12:0] $end
$var reg 4 z nextstate [3:0] $end
$var reg 4 { state [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module dp $end
$var wire 3 | ALUControl [2:0] $end
$var wire 2 } ALUSrcA [1:0] $end
$var wire 2 ~ ALUSrcB [1:0] $end
$var wire 1 3 AdrSrc $end
$var wire 1 2 IRWrite $end
$var wire 2 !" ImmSrc [1:0] $end
$var wire 1 / PCWrite $end
$var wire 2 "" RegSrc [1:0] $end
$var wire 1 , RegWrite $end
$var wire 2 #" ResultSrc [1:0] $end
$var wire 1 $ clk $end
$var wire 1 ) isShift $end
$var wire 1 % reset $end
$var wire 32 $" value_A [31:0] $end
$var wire 32 %" toMuxB [31:0] $end
$var wire 32 &" WriteData [31:0] $end
$var wire 32 '" SrcB [31:0] $end
$var wire 32 (" SrcA [31:0] $end
$var wire 32 )" Result [31:0] $end
$var wire 32 *" ReadData [31:0] $end
$var wire 32 +" RD2 [31:0] $end
$var wire 32 ," RD1 [31:0] $end
$var wire 4 -" RA2 [3:0] $end
$var wire 4 ." RA1 [3:0] $end
$var wire 32 /" PC [31:0] $end
$var wire 32 0" Instr [31:0] $end
$var wire 32 1" ExtImm [31:0] $end
$var wire 32 2" Data [31:0] $end
$var wire 32 3" Adr [31:0] $end
$var wire 32 4" ALUResult [31:0] $end
$var wire 32 5" ALUOut [31:0] $end
$var wire 4 6" ALUFlags [3:0] $end
$var wire 32 7" A [31:0] $end
$scope module adrmux $end
$var wire 1 3 s $end
$var wire 32 8" y [31:0] $end
$var wire 32 9" d1 [31:0] $end
$var wire 32 :" d0 [31:0] $end
$var parameter 32 ;" WIDTH $end
$upscope $end
$scope module alu $end
$var wire 3 <" ALUControl [2:0] $end
$var wire 1 =" carry $end
$var wire 1 >" neg $end
$var wire 1 ?" overflow $end
$var wire 1 @" zero $end
$var wire 33 A" sum [32:0] $end
$var wire 16 B" multiplier [15:0] $end
$var wire 32 C" condinvb [31:0] $end
$var wire 32 D" b [31:0] $end
$var wire 32 E" a [31:0] $end
$var wire 4 F" ALUFlags [3:0] $end
$var reg 32 G" Result [31:0] $end
$scope module u1_fmul $end
$var wire 16 H" A [15:0] $end
$var wire 16 I" B [15:0] $end
$var parameter 32 J" MAX_ITERATIONS $end
$var parameter 15 K" ONE $end
$var reg 5 L" E [4:0] $end
$var reg 11 M" m1 [10:0] $end
$var reg 11 N" m2 [10:0] $end
$var reg 10 O" mantisa [9:0] $end
$var reg 16 P" result [15:0] $end
$var reg 22 Q" temp_mantisa [21:0] $end
$var integer 32 R" i [31:0] $end
$upscope $end
$upscope $end
$scope module aluresultreg $end
$var wire 1 $ clk $end
$var wire 32 S" d [31:0] $end
$var wire 1 % reset $end
$var parameter 32 T" WIDTH $end
$var reg 32 U" q [31:0] $end
$upscope $end
$scope module ext $end
$var wire 2 V" ImmSrc [1:0] $end
$var wire 24 W" Instr [23:0] $end
$var reg 32 X" ExtImm [31:0] $end
$upscope $end
$scope module instrreg $end
$var wire 1 $ clk $end
$var wire 1 2 en $end
$var wire 1 % reset $end
$var wire 32 Y" d [31:0] $end
$var parameter 32 Z" WIDTH $end
$var reg 32 [" q [31:0] $end
$upscope $end
$scope module pcreg $end
$var wire 1 $ clk $end
$var wire 1 / en $end
$var wire 1 % reset $end
$var wire 32 \" d [31:0] $end
$var parameter 32 ]" WIDTH $end
$var reg 32 ^" q [31:0] $end
$upscope $end
$scope module r1Reg $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 _" d [31:0] $end
$var parameter 32 `" WIDTH $end
$var reg 32 a" q [31:0] $end
$upscope $end
$scope module r2Reg $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 b" d [31:0] $end
$var parameter 32 c" WIDTH $end
$var reg 32 d" q [31:0] $end
$upscope $end
$scope module ra1mux $end
$var wire 4 e" d0 [3:0] $end
$var wire 4 f" d1 [3:0] $end
$var wire 1 g" s $end
$var wire 4 h" y [3:0] $end
$var parameter 32 i" WIDTH $end
$upscope $end
$scope module ra2mux $end
$var wire 4 j" d0 [3:0] $end
$var wire 4 k" d1 [3:0] $end
$var wire 1 l" s $end
$var wire 4 m" y [3:0] $end
$var parameter 32 n" WIDTH $end
$upscope $end
$scope module readdatareg $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 o" d [31:0] $end
$var parameter 32 p" WIDTH $end
$var reg 32 q" q [31:0] $end
$upscope $end
$scope module resmux $end
$var wire 32 r" d0 [31:0] $end
$var wire 32 s" d1 [31:0] $end
$var wire 32 t" d2 [31:0] $end
$var wire 2 u" s [1:0] $end
$var wire 32 v" y [31:0] $end
$var parameter 32 w" WIDTH $end
$upscope $end
$scope module rf $end
$var wire 1 $ clk $end
$var wire 32 x" r15 [31:0] $end
$var wire 4 y" ra1 [3:0] $end
$var wire 4 z" ra2 [3:0] $end
$var wire 4 {" wa3 [3:0] $end
$var wire 32 |" wd3 [31:0] $end
$var wire 1 , we3 $end
$var wire 32 }" rd2 [31:0] $end
$var wire 32 ~" rd1 [31:0] $end
$upscope $end
$scope module shft $end
$var wire 32 !# rm [31:0] $end
$var wire 2 "# sh [1:0] $end
$var wire 5 ## shamt [4:0] $end
$var reg 32 $# shift [31:0] $end
$upscope $end
$scope module srcAtoZero $end
$var wire 32 %# d0 [31:0] $end
$var wire 32 &# d1 [31:0] $end
$var wire 1 ) s $end
$var wire 32 '# y [31:0] $end
$var parameter 32 (# WIDTH $end
$upscope $end
$scope module srcamux $end
$var wire 32 )# d0 [31:0] $end
$var wire 32 *# d1 [31:0] $end
$var wire 1 +# s $end
$var wire 32 ,# y [31:0] $end
$var parameter 32 -# WIDTH $end
$upscope $end
$scope module srcbmux $end
$var wire 32 .# d0 [31:0] $end
$var wire 32 /# d1 [31:0] $end
$var wire 32 0# d2 [31:0] $end
$var wire 2 1# s [1:0] $end
$var wire 32 2# y [31:0] $end
$var parameter 32 3# WIDTH $end
$upscope $end
$upscope $end
$upscope $end
$scope module mem $end
$var wire 32 4# a [31:0] $end
$var wire 1 $ clk $end
$var wire 32 5# rd [31:0] $end
$var wire 32 6# wd [31:0] $end
$var wire 1 " we $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 3#
b100000 -#
b100000 (#
b100000 w"
b100000 p"
b100 n"
b100 i"
b100000 c"
b100000 `"
b100000 ]"
b100000 Z"
b100000 T"
b11110000000000 K"
b10110 J"
b100000 ;"
b1010 x
b101 w
b100 v
b11 u
b10 t
b0 s
b110 r
b111 q
b1 p
b1001 o
b1000 n
b10 [
b10 W
b1 T
$end
#0
$dumpvars
b0 6#
b11100000010011110000000000001111 5#
b0 4#
b100 2#
b10 1#
b100 0#
b0 /#
b0 .#
b0 ,#
1+#
b0 *#
b0 )#
b0 '#
b0 &#
b0 %#
b0 $#
b0 ##
b0 "#
b0 !#
bx ~"
bx }"
b100 |"
b0 {"
b0 z"
b0 y"
b100 x"
b100 v"
b10 u"
b100 t"
b0 s"
b0 r"
b0 q"
b11100000010011110000000000001111 o"
b0 m"
0l"
b0 k"
b0 j"
b0 h"
0g"
b1111 f"
b0 e"
b0 d"
bx b"
b0 a"
bx _"
b0 ^"
b100 \"
b0 ["
b11100000010011110000000000001111 Y"
b0 X"
b0 W"
b0 V"
b0 U"
b100 S"
bx R"
bx Q"
b0 P"
bx O"
bx N"
bx M"
bx L"
b100 I"
b0 H"
b100 G"
b0 F"
b0 E"
b100 D"
b100 C"
b0 B"
b100 A"
0@"
0?"
0>"
0="
b0 <"
b0 :"
b100 9"
b0 8"
b0 7"
b0 6"
b0 5"
b100 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
bx ,"
bx +"
b11100000010011110000000000001111 *"
b100 )"
b0 ("
b100 '"
b0 &"
b0 %"
b0 $"
b10 #"
b0 ""
b0 !"
b10 ~
b1 }
b0 |
b0 {
b1 z
b1000101001100 y
b1 m
b10 l
b10 k
b0 j
b0 i
b0 h
b0 g
b0 f
0e
b1 d
b10 c
0b
b10 a
b0 `
b0 _
b0 ^
b0 ]
b0 \
0Z
b0 Y
b0 X
0V
b0 U
0S
0R
0Q
0P
1O
b0 N
b0 M
b0 L
0K
0J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b1 C
b10 B
b0 A
b0 @
0?
1>
0=
b0 <
0;
b10 :
b0 9
b0 8
b0 7
b1 6
b10 5
b0 4
03
12
b0 1
b0 0
1/
b11100000010011110000000000001111 .
b0 -
0,
b10 +
b0 *
0)
b0 (
b11100000010011110000000000001111 '
b0 &
1%
1$
b0 #
0"
b0 !
$end
#5
0$
#10
1$
#15
0$
#20
1$
#22
0%
#25
0$
#30
b1000 +"
b1000 b"
b1000 }"
b1000 ,"
b1000 _"
b1000 ~"
1K
b1000 )"
b1000 9"
b1000 \"
b1000 v"
b1000 x"
b1000 |"
0/
b1111 1"
b1111 X"
b1111 /#
b1111 -"
b1111 m"
b1111 z"
b1111 ."
b1111 h"
b1111 y"
b100 ]
b100 i
b1110 F
b1110 M
b100 H"
b1000 4"
b1000 G"
b1000 S"
b1000 t"
b11100000010011110001000000001111 '
b11100000010011110001000000001111 .
b11100000010011110001000000001111 *"
b11100000010011110001000000001111 Y"
b11100000010011110001000000001111 o"
b11100000010011110001000000001111 5#
0>
02
bx %"
bx $#
bx .#
bx $"
bx '#
bx )#
b10011110000000000001111 W"
b1111 j"
b1111 e"
b11100000010011110000 9
b1000 A"
b100 ("
b100 E"
b100 ,#
b100 #
b100 (
b100 4
b100 3"
b100 8"
b100 4#
b1001100 y
b110 z
b100 5"
b100 U"
b100 r"
bx !
bx &
bx *
bx &"
bx d"
bx !#
bx 6#
bx 7"
bx a"
bx %#
b11100000010011110000000000001111 2"
b11100000010011110000000000001111 q"
b11100000010011110000000000001111 s"
b11100000010011110000000000001111 0
b11100000010011110000000000001111 0"
b11100000010011110000000000001111 ["
b100 /"
b100 :"
b100 ^"
b100 *#
b1 {
1$
#35
0$
#40
b1 Y
b10 U
1@"
b110 7
b110 D
b110 L
b110 6"
b110 F"
1="
b1000 H"
b1000 I"
b11111111111111111111111111110111 C"
b1000 ("
b1000 E"
b1000 ,#
b1000 '"
b1000 D"
b1000 2#
b0 4"
b0 G"
b0 S"
b0 t"
b100000000000000000000000000000000 A"
0+#
b1 8
b1 E
b1 f
b1 |
b1 <"
b0 +
b0 :
b0 a
b0 k
b0 #"
b0 u"
b0 6
b0 C
b0 d
b0 m
b0 }
b0 5
b0 B
b0 c
b0 l
b0 ~
b0 1#
1e
b1 y
b1000 z
b1000 $"
b1000 '#
b1000 )#
b1000 %"
b1000 $#
b1000 .#
b110 {
1J
b11100000010011110001000000001111 2"
b11100000010011110001000000001111 q"
b11100000010011110001000000001111 s"
b1000 7"
b1000 a"
b1000 %#
b1000 !
b1000 &
b1000 *
b1000 &"
b1000 d"
b1000 !#
b1000 6#
b1000 5"
b1000 U"
b1000 r"
1$
#45
0$
#50
b0 U
0?"
0>"
0="
b0 Y
b1000 C"
b0 7
b0 D
b0 L
b0 6"
b0 F"
0@"
b10000 4"
b10000 G"
b10000 S"
b10000 t"
b10000 A"
b0 ,"
b0 _"
b0 ~"
b0 +"
b0 b"
b0 }"
1,
b0 8
b0 E
b0 f
b0 |
b0 <"
b0 )"
b0 9"
b0 \"
b0 v"
b0 x"
b0 |"
1;
0e
b1000000000 y
b0 z
b0 5"
b0 U"
b0 r"
b1000 {
1$
#55
0$
#60
b100 I"
b100 C"
1/
0,
1+#
b100 H"
b1000 4"
b1000 G"
b1000 S"
b1000 t"
b100 '"
b100 D"
b100 2#
b1000 ,"
b1000 _"
b1000 ~"
b1000 +"
b1000 b"
b1000 }"
1>
0;
12
b10 +
b10 :
b10 a
b10 k
b10 #"
b10 u"
b1 6
b1 C
b1 d
b1 m
b1 }
b10 5
b10 B
b10 c
b10 l
b10 ~
b10 1#
b1000 A"
b100 ("
b100 E"
b100 ,#
b1000 )"
b1000 9"
b1000 \"
b1000 v"
b1000 x"
b1000 |"
b1000101001100 y
b1 z
b0 $"
b0 '#
b0 )#
b0 %"
b0 $#
b0 .#
b0 {
b0 7"
b0 a"
b0 %#
b0 !
b0 &
b0 *
b0 &"
b0 d"
b0 !#
b0 6#
b10000 5"
b10000 U"
b10000 r"
1$
#65
0$
#70
b1100 ,"
b1100 _"
b1100 ~"
b1100 +"
b1100 b"
b1100 }"
b1100 )"
b1100 9"
b1100 \"
b1100 v"
b1100 x"
b1100 |"
0/
b1 `
b1000 H"
b1100 4"
b1100 G"
b1100 S"
b1100 t"
b11100010100000000000000000001010 '
b11100010100000000000000000001010 .
b11100010100000000000000000001010 *"
b11100010100000000000000000001010 Y"
b11100010100000000000000000001010 o"
b11100010100000000000000000001010 5#
0>
02
b1000 %"
b1000 $#
b1000 .#
b1000 $"
b1000 '#
b1000 )#
b10011110001000000001111 W"
b1 {"
b1 k"
b11100000010011110001 9
b1100 A"
b1000 ("
b1000 E"
b1000 ,#
b1000 #
b1000 (
b1000 4
b1000 3"
b1000 8"
b1000 4#
b1001100 y
b110 z
b1000 5"
b1000 U"
b1000 r"
b1000 !
b1000 &
b1000 *
b1000 &"
b1000 d"
b1000 !#
b1000 6#
b1000 7"
b1000 a"
b1000 %#
b11100000010011110001000000001111 0
b11100000010011110001000000001111 0"
b11100000010011110001000000001111 ["
b1000 /"
b1000 :"
b1000 ^"
b1000 *#
b1 {
1$
#75
0$
#80
b1 Y
b10 U
1@"
b110 7
b110 D
b110 L
b110 6"
b110 F"
1="
b1100 H"
b1100 I"
b11111111111111111111111111110011 C"
b1100 ("
b1100 E"
b1100 ,#
b1100 '"
b1100 D"
b1100 2#
b0 4"
b0 G"
b0 S"
b0 t"
b100000000000000000000000000000000 A"
0+#
b1 8
b1 E
b1 f
b1 |
b1 <"
b0 +
b0 :
b0 a
b0 k
b0 #"
b0 u"
b0 6
b0 C
b0 d
b0 m
b0 }
b0 5
b0 B
b0 c
b0 l
b0 ~
b0 1#
1e
b1 y
b1000 z
b1100 $"
b1100 '#
b1100 )#
b1100 %"
b1100 $#
b1100 .#
b110 {
b11100010100000000000000000001010 2"
b11100010100000000000000000001010 q"
b11100010100000000000000000001010 s"
b1100 7"
b1100 a"
b1100 %#
b1100 !
b1100 &
b1100 *
b1100 &"
b1100 d"
b1100 !#
b1100 6#
b1100 5"
b1100 U"
b1100 r"
1$
#85
0$
#90
b0 U
0?"
0>"
0="
b0 Y
b1100 C"
b0 7
b0 D
b0 L
b0 6"
b0 F"
0@"
b11000 4"
b11000 G"
b11000 S"
b11000 t"
b11000 A"
b0 ,"
b0 _"
b0 ~"
b0 +"
b0 b"
b0 }"
1,
b0 8
b0 E
b0 f
b0 |
b0 <"
b0 )"
b0 9"
b0 \"
b0 v"
b0 x"
b0 |"
1;
0e
b1000000000 y
b0 z
b0 5"
b0 U"
b0 r"
b1000 {
1$
#95
0$
#100
b100 I"
b100 C"
1/
0,
1+#
b1000 H"
b1100 4"
b1100 G"
b1100 S"
b1100 t"
b100 '"
b100 D"
b100 2#
b1100 ,"
b1100 _"
b1100 ~"
b1100 +"
b1100 b"
b1100 }"
1>
0;
12
b10 +
b10 :
b10 a
b10 k
b10 #"
b10 u"
b1 6
b1 C
b1 d
b1 m
b1 }
b10 5
b10 B
b10 c
b10 l
b10 ~
b10 1#
b1100 A"
b1000 ("
b1000 E"
b1000 ,#
b1100 )"
b1100 9"
b1100 \"
b1100 v"
b1100 x"
b1100 |"
b1000101001100 y
b1 z
b0 $"
b0 '#
b0 )#
b0 %"
b0 $#
b0 .#
b0 {
b0 7"
b0 a"
b0 %#
b0 !
b0 &
b0 *
b0 &"
b0 d"
b0 !#
b0 6#
b11000 5"
b11000 U"
b11000 r"
1$
#105
0$
#110
bx +"
bx b"
bx }"
b0 ,"
b0 _"
b0 ~"
b10000 )"
b10000 9"
b10000 \"
b10000 v"
b10000 x"
b10000 |"
0/
b1010 1"
b1010 X"
b1010 /#
b1010 -"
b1010 m"
b1010 z"
b0 ."
b0 h"
b0 y"
b101000 ]
b101000 i
b0 `
b1100 H"
b10000 4"
b10000 G"
b10000 S"
b10000 t"
b11100010100000010001000001100100 '
b11100010100000010001000001100100 .
b11100010100000010001000001100100 *"
b11100010100000010001000001100100 Y"
b11100010100000010001000001100100 o"
b11100010100000010001000001100100 5#
0>
02
b1100 %"
b1100 $#
b1100 .#
b1100 $"
b1100 '#
b1100 )#
b100000000000000000001010 W"
b0 {"
b0 k"
b1010 j"
b0 e"
b11100010100000000000 9
b10000 A"
b1100 ("
b1100 E"
b1100 ,#
b1100 #
b1100 (
b1100 4
b1100 3"
b1100 8"
b1100 4#
b1001100 y
b111 z
b1100 5"
b1100 U"
b1100 r"
b1100 !
b1100 &
b1100 *
b1100 &"
b1100 d"
b1100 !#
b1100 6#
b1100 7"
b1100 a"
b1100 %#
b11100010100000000000000000001010 0
b11100010100000000000000000001010 0"
b11100010100000000000000000001010 ["
b1100 /"
b1100 :"
b1100 ^"
b1100 *#
b1 {
1$
#115
0$
#120
b0 H"
b1010 I"
b1010 C"
b1010 4"
b1010 G"
b1010 S"
b1010 t"
b1010 A"
b0 ("
b0 E"
b0 ,#
b1010 '"
b1010 D"
b1010 2#
0+#
b0 +
b0 :
b0 a
b0 k
b0 #"
b0 u"
b0 6
b0 C
b0 d
b0 m
b0 }
b1 5
b1 B
b1 c
b1 l
b1 ~
b1 1#
1e
b11 y
b1000 z
b0 $"
b0 '#
b0 )#
bx %"
bx $#
bx .#
b111 {
b11100010100000010001000001100100 2"
b11100010100000010001000001100100 q"
b11100010100000010001000001100100 s"
b0 7"
b0 a"
b0 %#
bx !
bx &
bx *
bx &"
bx d"
bx !#
bx 6#
b10000 5"
b10000 U"
b10000 r"
1$
#125
0$
#130
bx U
x?"
x>"
x="
bx Y
bx 7
bx D
bx L
bx 6"
bx F"
x@"
bx 4"
bx G"
bx S"
bx t"
bx I"
bx A"
bx C"
bx '"
bx D"
bx 2#
1,
b1010 )"
b1010 9"
b1010 \"
b1010 v"
b1010 x"
b1010 |"
1;
b0 5
b0 B
b0 c
b0 l
b0 ~
b0 1#
0e
b1000000000 y
b0 z
b1010 5"
b1010 U"
b1010 r"
b1000 {
1$
#135
0$
#140
b0 U
0?"
0>"
0="
b0 Y
b0 7
b0 D
b0 L
b0 6"
b0 F"
0@"
b10000 4"
b10000 G"
b10000 S"
b10000 t"
b1100 H"
b100 I"
b10000 A"
b100 C"
b1100 ("
b1100 E"
b1100 ,#
b100 '"
b100 D"
b100 2#
1/
0,
1+#
1>
0;
12
b10 +
b10 :
b10 a
b10 k
b10 #"
b10 u"
b1 6
b1 C
b1 d
b1 m
b1 }
b10 5
b10 B
b10 c
b10 l
b10 ~
b10 1#
b10000 )"
b10000 9"
b10000 \"
b10000 v"
b10000 x"
b10000 |"
b1000101001100 y
b1 z
b1010 ,"
b1010 _"
b1010 ~"
b0 {
bx 5"
bx U"
bx r"
1$
#145
0$
#150
b0 ,"
b0 _"
b0 ~"
b10100 )"
b10100 9"
b10100 \"
b10100 v"
b10100 x"
b10100 |"
0/
b0 %"
b0 $#
b0 .#
b1100100 1"
b1100100 X"
b1100100 /#
b100 -"
b100 m"
b100 z"
b1 ."
b1 h"
b1 y"
b1 `
b10000 H"
b10100 4"
b10100 G"
b10100 S"
b10100 t"
b11100001101000000000000010000000 '
b11100001101000000000000010000000 .
b11100001101000000000000010000000 *"
b11100001101000000000000010000000 Y"
b11100001101000000000000010000000 o"
b11100001101000000000000010000000 5#
0>
02
b1010 $"
b1010 '#
b1010 )#
b11 "#
b100000010001000001100100 W"
b1 {"
b1 k"
b100 j"
b1 e"
b11100010100000010001 9
b10100 A"
b10000 ("
b10000 E"
b10000 ,#
b10000 #
b10000 (
b10000 4
b10000 3"
b10000 8"
b10000 4#
b1001100 y
b111 z
b10000 5"
b10000 U"
b10000 r"
b1010 7"
b1010 a"
b1010 %#
b11100010100000010001000001100100 0
b11100010100000010001000001100100 0"
b11100010100000010001000001100100 ["
b10000 /"
b10000 :"
b10000 ^"
b10000 *#
b1 {
1$
#155
0$
#160
b0 H"
b1100100 I"
b1100100 C"
b1100100 4"
b1100100 G"
b1100100 S"
b1100100 t"
b1100100 A"
b0 ("
b0 E"
b0 ,#
b1100100 '"
b1100100 D"
b1100100 2#
0+#
b0 +
b0 :
b0 a
b0 k
b0 #"
b0 u"
b0 6
b0 C
b0 d
b0 m
b0 }
b1 5
b1 B
b1 c
b1 l
b1 ~
b1 1#
1e
b11 y
b1000 z
b0 $"
b0 '#
b0 )#
b111 {
b11100001101000000000000010000000 2"
b11100001101000000000000010000000 q"
b11100001101000000000000010000000 s"
b0 7"
b0 a"
b0 %#
b10100 5"
b10100 U"
b10100 r"
1$
#165
0$
#170
b1 Y
b100 7
b100 D
b100 L
b100 6"
b100 F"
1@"
b0 4"
b0 G"
b0 S"
b0 t"
b0 I"
b0 A"
b0 C"
b0 '"
b0 D"
b0 2#
1,
b1100100 )"
b1100100 9"
b1100100 \"
b1100100 v"
b1100100 x"
b1100100 |"
1;
b0 5
b0 B
b0 c
b0 l
b0 ~
b0 1#
0e
b1000000000 y
b0 z
b1100100 5"
b1100100 U"
b1100100 r"
b1000 {
1$
#175
0$
#180
b0 Y
b10000 H"
b100 I"
b100 C"
b0 7
b0 D
b0 L
b0 6"
b0 F"
0@"
b10100 4"
b10100 G"
b10100 S"
b10100 t"
b10100 A"
b10000 ("
b10000 E"
b10000 ,#
b100 '"
b100 D"
b100 2#
1/
0,
1+#
1>
0;
12
b10 +
b10 :
b10 a
b10 k
b10 #"
b10 u"
b1 6
b1 C
b1 d
b1 m
b1 }
b10 5
b10 B
b10 c
b10 l
b10 ~
b10 1#
b10100 )"
b10100 9"
b10100 \"
b10100 v"
b10100 x"
b10100 |"
b1000101001100 y
b1 z
b1100100 ,"
b1100100 _"
b1100100 ~"
b0 {
b0 5"
b0 U"
b0 r"
1$
#185
0$
#190
1)
b1010 +"
b1010 b"
b1010 }"
b1010 ,"
b1010 _"
b1010 ~"
b11000 )"
b11000 9"
b11000 \"
b11000 v"
b11000 x"
b11000 |"
0/
bx0 %"
bx0 $#
bx0 .#
b10000000 1"
b10000000 X"
b10000000 /#
b0 -"
b0 m"
b0 z"
b0 ."
b0 h"
b0 y"
b11010 ]
b11010 i
b0 `
b10100 H"
b11000 4"
b11000 G"
b11000 S"
b11000 t"
b11100101100000010000000000000000 '
b11100101100000010000000000000000 .
b11100101100000010000000000000000 *"
b11100101100000010000000000000000 Y"
b11100101100000010000000000000000 o"
b11100101100000010000000000000000 5#
0>
02
b0 $"
b0 '#
b0 )#
b0 "#
b1 ##
b101000000000000010000000 W"
b0 {"
b0 k"
b0 j"
b0 e"
b11100001101000000000 9
b11000 A"
b10100 ("
b10100 E"
b10100 ,#
b10100 #
b10100 (
b10100 4
b10100 3"
b10100 8"
b10100 4#
b1001100 y
b110 z
b10100 5"
b10100 U"
b10100 r"
b1100100 7"
b1100100 a"
b1100100 %#
b11100001101000000000000010000000 0
b11100001101000000000000010000000 0"
b11100001101000000000000010000000 ["
b10100 /"
b10100 :"
b10100 ^"
b10100 *#
b1 {
1$
#195
0$
#200
b0 H"
b10100 I"
b10100 C"
b10100 4"
b10100 G"
b10100 S"
b10100 t"
b10100 A"
b0 ("
b0 E"
b0 ,#
b10100 '"
b10100 D"
b10100 2#
0+#
b0 +
b0 :
b0 a
b0 k
b0 #"
b0 u"
b0 6
b0 C
b0 d
b0 m
b0 }
b0 5
b0 B
b0 c
b0 l
b0 ~
b0 1#
1e
b1 y
b1000 z
b10100 %"
b10100 $#
b10100 .#
b110 {
b11100101100000010000000000000000 2"
b11100101100000010000000000000000 q"
b11100101100000010000000000000000 s"
b1010 7"
b1010 a"
b1010 %#
b1010 !
b1010 &
b1010 *
b1010 &"
b1010 d"
b1010 !#
b1010 6#
b11000 5"
b11000 U"
b11000 r"
1$
#205
0$
#210
1,
b10100 )"
b10100 9"
b10100 \"
b10100 v"
b10100 x"
b10100 |"
1;
0e
b1000000000 y
b0 z
b10100 5"
b10100 U"
b10100 r"
b1000 {
1$
#215
0$
#220
b11000 )"
b11000 9"
b11000 \"
b11000 v"
b11000 x"
b11000 |"
b10100 H"
b100 I"
b100 C"
b11000 4"
b11000 G"
b11000 S"
b11000 t"
b11000 A"
b10100 ("
b10100 E"
b10100 ,#
b100 '"
b100 D"
b100 2#
1/
0,
1+#
1>
0;
12
b10 +
b10 :
b10 a
b10 k
b10 #"
b10 u"
b1 6
b1 C
b1 d
b1 m
b1 }
b10 5
b10 B
b10 c
b10 l
b10 ~
b10 1#
b1000101001100 y
b1 z
b10100 ,"
b10100 _"
b10100 ~"
b10100 +"
b10100 b"
b10100 }"
b0 {
1$
#225
0$
#230
b10100 $"
b10100 '#
b10100 )#
1l"
b1100100 ,"
b1100100 _"
b1100100 ~"
0)
b10 -
b10 <
b10 h
b10 ""
b11100 )"
b11100 9"
b11100 \"
b11100 v"
b11100 x"
b11100 |"
0/
b0 1"
b0 X"
b0 /#
b1 ."
b1 h"
b1 y"
b1 1
b1 @
b1 ^
b1 !"
b1 V"
b1 _
b1 j
b11000 ]
b11000 i
b11000 H"
b11100 4"
b11100 G"
b11100 S"
b11100 t"
bx '
bx .
bx *"
bx Y"
bx o"
bx 5#
0>
02
b0 ##
b100000010000000000000000 W"
b1 e"
b11100101100000010000 9
b11100 A"
b11000 ("
b11000 E"
b11000 ,#
b11000 #
b11000 (
b11000 4
b11000 3"
b11000 8"
b11000 4#
b1001100 y
b10 z
b11000 5"
b11000 U"
b11000 r"
b10100 !
b10100 &
b10100 *
b10100 &"
b10100 d"
b10100 !#
b10100 6#
b10100 7"
b10100 a"
b10100 %#
b11100101100000010000000000000000 0
b11100101100000010000000000000000 0"
b11100101100000010000000000000000 ["
b11000 /"
b11000 :"
b11000 ^"
b11000 *#
b1 {
1$
#235
0$
#240
b1100100 H"
b0 I"
b0 C"
b1100100 4"
b1100100 G"
b1100100 S"
b1100100 t"
b1100100 A"
b1100100 ("
b1100100 E"
b1100100 ,#
b0 '"
b0 D"
b0 2#
0+#
b0 +
b0 :
b0 a
b0 k
b0 #"
b0 u"
b0 6
b0 C
b0 d
b0 m
b0 }
b1 5
b1 B
b1 c
b1 l
b1 ~
b1 1#
b10 y
b101 z
b1100100 $"
b1100100 '#
b1100100 )#
b10 {
bx 2"
bx q"
bx s"
b1100100 7"
b1100100 a"
b1100100 %#
b11100 5"
b11100 U"
b11100 r"
1$
#245
0$
#250
b1111000 4"
b1111000 G"
b1111000 S"
b1111000 t"
b10100 I"
b1111000 A"
b10100 C"
b10100 '"
b10100 D"
b10100 2#
1"
b1100100 #
b1100100 (
b1100100 4
b1100100 3"
b1100100 8"
b1100100 4#
b1100100 )"
b1100100 9"
b1100100 \"
b1100100 v"
b1100100 x"
b1100100 |"
1?
13
b0 5
b0 B
b0 c
b0 l
b0 ~
b0 1#
b10010000000 y
b0 z
b1100100 5"
b1100100 U"
b1100100 r"
b101 {
1$
#255
